services:
  controller:
    build: ./controller
    environment:
      - NODE_COUNT=${NODE_COUNT}
      - EXPECTED=${EXPECTED}
      - TIMEOUT_SEC=${TIMEOUT_SEC}
      - CONTROLLER_URL=http://controller:8000
      - RESULTS_DIR=/app/results
    volumes:
      - ./results:/app/results
    ports:
      - "8000:8000"

  seed:
    build: ./node
    environment:
      - CONTROLLER_URL=http://controller:8000
      - SERVICE_NAME=node
      - NODE_COUNT=${NODE_COUNT}
      - IS_SEED=1
      - DEBUG=${DEBUG:-0}
      - SEED_CLUSTER_TIMEOUT=${SEED_CLUSTER_TIMEOUT}
      - ROUND_PAUSE=${ROUND_PAUSE}
      - ROUNDS_BROADCAST=${ROUNDS_BROADCAST}
      - ROUNDS_FANOUT=${ROUNDS_FANOUT}
      - LOSS_PROB=${LOSS_PROB}
      - FAIL_PROB=${FAIL_PROB}
      - FANOUT=${FANOUT}
    depends_on:
      - controller

  node:
    build: ./node
    environment:
      - CONTROLLER_URL=http://controller:8000
      - SERVICE_NAME=node
      - NODE_COUNT=${NODE_COUNT}
      - DEBUG=${DEBUG:-0}
      - ROUND_PAUSE=${ROUND_PAUSE}
      - ROUNDS_BROADCAST=${ROUNDS_BROADCAST}
      - ROUNDS_FANOUT=${ROUNDS_FANOUT}
      - LOSS_PROB=${LOSS_PROB}
      - FAIL_PROB=${FAIL_PROB}
      - FANOUT=${FANOUT}
      - IS_SEED=0
    depends_on:
      - controller
    deploy:
      replicas: ${NODE_COUNT:-111}
